---
import InsetRadial from "@shared/content/InsetRadial.astro";
import CardProduct from "@/components/ui/CardProduct.astro";

import NextJs from "@shared/icons/NextJs.astro";
import React from "@shared/icons/React.astro";
import IcAstro from "@shared/icons/IcAstro.astro";
import TailwindCss from "@shared/icons/TailwindCss.astro";
import Angular from "@shared/icons/Angular.astro";

import Badge from "@/components/ui/Badge.astro";
import Redux from "@/shared/icons/Redux.astro";
import GridBackgroundDot from "@/shared/content/GridBackgroundDot.astro";
---

<section class="main flow max-w-7xl" id="projects">
  <div class="relative w-full my-2 lg:my-14">
    <InsetRadial />
    <h1
      class="stroke-text text-6xl md:text-7xl lg:text-[9rem] text-center py-10"
    >
      Projects
    </h1>
  </div>

  <div class="main__cards cards">
    <div class="cards__inner">

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner=""
          imageProduct={["learn-next.webp"]}
          title="Learn NextJs"
          subTitle="I developed a Pokemon app using Next.js, integrating the PokeAPI to show Pokemon data and details. I also implemented Redux for state management."
        >
          <Badge>
            <NextJs className="w-5 h-5" />
            NextJs
          </Badge>

          <Badge>
            <Redux className="w-5 h-5" />
            Redux
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner="https://flypass-find-movies.vercel.app/"
          imageProduct={[
            "findmovies-one.webp",
            "findmovies-two.webp",
            "findmovies-three.webp",
          ]}
          title="Find Movies"
          subTitle="I developed a movie app with Angular 18 and Signals, integrating TheMovieDB API to show trending and popular content."
        >
          <Badge>
            <Angular className="w-5 h-5" />
            Angular
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner="https://only-shopping.vercel.app/"
          imageProduct={[
            "shopping-one.webp",
            "shopping-two.webp",
            "shopping-three.webp",
          ]}
          title="OnlyShopping"
          subTitle="I developed a shirt store web app using React, integrating WhatsApp for direct customer contact and orders."
        >
          <Badge>
            <React className="w-5 h-5" />
            React
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner="https://film-quality.vercel.app/"
          imageProduct={["MovieFilm.avif"]}
          title="MovieFilm"
          subTitle="I built a movie web app using Next.js, with server-side rendering for fast performance, integrating TheMovieDB API to showcase trending and popular movies."
        >
          <Badge>
            <NextJs className="w-5 h-5" />
            NextJs
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner="https://landing-warriors.vercel.app/"
          imageProduct={["Warriors.avif"]}
          title="Landing Warriors"
          subTitle="I built a web app with Astro, featuring dynamic Mortal Kombat characters and animations, optimized for fast performance."
        >
          <Badge>
            <IcAstro className="w-5 h-5" />
            Astro
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>

      <div class="cards__card card animation-timeline overflow-hidden">
        <GridBackgroundDot />
        <CardProduct
          urlInner="https://triqui-game-neon.vercel.app/"
          imageProduct={["triqui-game-one.webp", "triqui-game-two.webp"]}
          title="Triqui Game"
          subTitle="I developed a Tic-Tac-Toe game using React, with interactive gameplay and state management for a smooth user experience."
        >
          <Badge>
            <React className="w-5 h-5" />
            React
          </Badge>

          <Badge>
            <TailwindCss className="w-5 h-5" />
            TailwindCss
          </Badge>
        </CardProduct>
      </div>
      <div class="overlay cards__inner"></div>
    </div>
  </div>

  <style is:inline>

    .main {
      --hue: 0;
      --saturation: 0%;
      --lightness: 0%;
    }

    ul {
      list-style: none;
    }

    .main__heading {
      font-weight: 600;
      font-size: 2.25em;
      margin-bottom: 0.75em;
      text-align: center;
      color: #eceff1;
    }

    .cards {
      position: relative;
    }

    .cards__inner {
      display: flex;
      flex-wrap: wrap;
      gap: 1.25rem;
    }

    .card {
      --flow-space: 0.5em;
      --hsl: var(--hue), var(--saturation), var(--lightness);
      flex: 1 1 30rem;
      padding: 1.5em 2em;
      display: grid;
      grid-template-rows: auto auto auto 1fr;
      align-items: start;
      gap: 1rem;
      color: #eceff1;
      background-color: hsl(208, 100%, 7%);
      border: 1px solid #eceff133;
      border-radius: 15px;
    }

    .card:nth-child(1) {
      --hue: 165;
      --saturation: 82.26%;
      --lightness: 51.37%;
    }

    .card:nth-child(2) {
      --hue: 291.34;
      --saturation: 95.9%;
      --lightness: 61.76%;
    }

    .card:nth-child(3) {
      --hue: 338.69;
      --saturation: 100%;
      --lightness: 48.04%;
    }

    .card:nth-child(4) {
      --hue: 50.77;
      --saturation: 100%;
      --lightness: 50.59%;
    }

    .card:nth-child(5) {
      --hue: 450;
      --saturation: 100%;
      --lightness: 50%;
    }

    .card:nth-child(6) {
      --hue: 956.25;
      --saturation: 100%;
      --lightness: 50%;
    }

    .card__heading {
      font-size: 1.05em;
      font-weight: 600;
    }

    .flow > * + * {
      margin-top: var(--flow-space, 1.25em);
    }

    .overlay {
      position: absolute;
      inset: 0;
      pointer-events: none;
      user-select: none;
      opacity: var(--opacity, 1);
      -webkit-mask: radial-gradient(
        25rem 25rem at var(--x) var(--y),
        #000 1%,
        transparent 50%
      );
      mask: radial-gradient(
        25rem 25rem at var(--x) var(--y),
        #000 1%,
        transparent 50%
      );
      transition: 400ms mask ease;
      will-change: mask;
    }

    .overlay .card {
      background-color: hsla(var(--hsl), 0.15);
      border-color: hsla(var(--hsl), 1);
      box-shadow: 0 0 0 1px inset hsl(var(--hsl));
    }

    :not(.overlay) > .card {
      transition: 400ms background ease;
      will-change: background;
    }

    :not(.overlay) > .card:hover {
      --lightness: 95%;
      background: hsla(var(--hsl), 0.1);
    }
  </style>

  <script>
    const cardsContainer = document.querySelector(
      ".cards"
    ) as HTMLElement | null;
    const cards = Array.from(
      document.querySelectorAll(".card")
    ) as HTMLElement[];
    const overlay = document.querySelector(".overlay") as HTMLElement | null;

    if (!cardsContainer || !overlay) {
      throw new Error("Required elements not found.");
    }

    const applyOverlayMask = (e: PointerEvent) => {
      const overlayEl = e.currentTarget as HTMLElement;
      // const x = e.pageX - (cardsContainer?.offsetLeft || 0);
      const x = e.pageX - 300;
      const y = e.pageY - (cardsContainer?.offsetTop || 0);

      overlayEl.style.setProperty("--opacity", "1");
      overlayEl.style.setProperty("--x", `${x}px`);
      overlayEl.style.setProperty("--y", `${y}px`);
    };

    const createOverlayCta = (overlayCard: HTMLElement, ctaEl: HTMLElement) => {
      const overlayCta = document.createElement("div");
      overlayCta.setAttribute("aria-hidden", "true");
      overlayCard.append(overlayCta);
    };

    const observer = new ResizeObserver((entries) => {
      entries.forEach((entry) => {
        const target = entry.target as HTMLElement;
        const cardIndex = cards.indexOf(target);
        const { inlineSize: width, blockSize: height } = entry.borderBoxSize[0];

        if (cardIndex >= 0 && overlay?.children[cardIndex]) {
          const overlayChild = overlay.children[cardIndex] as HTMLElement;
          overlayChild.style.width = `${width}px`;
          overlayChild.style.height = `${height}px`;
        }
      });
    });

    const initOverlayCard = (cardEl: HTMLElement) => {
      const overlayCard = document.createElement("div");
      overlayCard.classList.add("card");
      overlay.append(overlayCard);
      observer.observe(cardEl);
    };

    cards.forEach(initOverlayCard);
    document.body.addEventListener("pointermove", applyOverlayMask);
  </script>
</section>
